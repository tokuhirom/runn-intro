desc: 効率的な関数の使用例
vars:
  largeDataset:
    - id: 1
      name: "User1"
      active: true
      details: { some: "large", nested: "data" }
    - id: 2
      name: "User2"
      active: false
      details: { some: "large", nested: "data" }
    - id: 3
      name: "User3"
      active: true
      details: { some: "large", nested: "data" }
steps:
  # 良い例：必要なデータのみを処理
  efficient_example:
    dump: |
      # 大きなオブジェクトから必要な部分のみ抽出
      let users = map(vars.largeDataset, {
        pick(., ["id", "name", "active"])
      });
      # アクティブユーザーのみフィルタ
      filter(users, {.active})
  
  # 避けるべき例：不必要な処理
  inefficient_example:
    dump: |
      # 全データを処理してからフィルタ（非効率）
      let allProcessed = map(vars.largeDataset, {
        merge(., {"processed": true, "timestamp": time.now()})
      });
      filter(allProcessed, {.active})