desc: 認証の実装パターン
runners:
  api: https://api.example.com/v1
  auth: https://auth.example.com
vars:
  username: "testuser"
  password: "testpass"
  api_key: "test-api-key"
  client_id: "test-client-id"
  client_secret: "test-client-secret"
  access_token: "dummy-access-token"
steps:
  # Basic認証
  basic_auth:
    req:
      api:///protected:
        get:
          headers:
            Authorization: "Basic {{ toBase64(vars.username + ':' + vars.password) }}"

  # Bearer Token認証
  bearer_auth:
    req:
      api:///protected:
        get:
          headers:
            Authorization: "Bearer {{ vars.access_token }}"

  # API Key認証
  api_key_auth:
    req:
      api:///protected:
        get:
          headers:
            X-API-Key: "{{ vars.api_key }}"
          query:
            api_key: "{{ vars.api_key }}"  # クエリパラメータとしても可能

  # OAuth 2.0フロー
  oauth_login:
    req:
      auth:///oauth/token:
        post:
          body:
            application/x-www-form-urlencoded:
              grant_type: client_credentials
              client_id: "{{ vars.client_id }}"
              client_secret: "{{ vars.client_secret }}"
              scope: "read write"
    test: current.res.status == 200

  use_oauth_token:
    req:
      api:///protected:
        get:
          headers:
            Authorization: "Bearer {{ steps.oauth_login.res.body.access_token }}"
    test: current.res.status == 200