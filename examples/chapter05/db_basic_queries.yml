desc: 基本的なデータベースクエリ操作
runners:
  postgres: postgres://user:password@localhost:5432/testdb?sslmode=disable
vars:
  test_email: "test@example.com"
steps:
  # SELECT クエリ
  select_users:
    db:
      postgres:///
        query: |
          SELECT id, name, email, created_at
          FROM users
          WHERE active = true
          ORDER BY created_at DESC
          LIMIT 10
    test: |
      len(current.rows) <= 10 &&
      all(current.rows, {.id > 0})

  # パラメータ付きクエリ
  select_user_by_email:
    db:
      postgres:///
        query: |
          SELECT id, name, email
          FROM users
          WHERE email = $1
        params:
          - "{{ vars.test_email }}"
    test: |
      len(current.rows) == 1 &&
      current.rows[0].email == vars.test_email

  # INSERT クエリ
  insert_user:
    db:
      postgres:///
        query: |
          INSERT INTO users (name, email, password_hash)
          VALUES ($1, $2, $3)
          RETURNING id, created_at
        params:
          - "{{ faker.name() }}"
          - "{{ faker.email() }}"
          - "{{ toBase64(faker.password(true, true, true, false, false, 12)) }}"
    test: |
      current.rows[0].id > 0 &&
      current.rows[0].created_at != null

  # UPDATE クエリ
  update_user:
    db:
      postgres:///
        query: |
          UPDATE users
          SET name = $1, updated_at = NOW()
          WHERE id = $2
          RETURNING name, updated_at
        params:
          - "Updated Name"
          - "{{ steps.insert_user.rows[0].id }}"
    test: |
      current.rows[0].name == "Updated Name" &&
      current.rows[0].updated_at != null

  # DELETE クエリ
  delete_user:
    db:
      postgres:///
        query: |
          DELETE FROM users
          WHERE id = $1
        params:
          - "{{ steps.insert_user.rows[0].id }}"
    test: current.rowsAffected == 1